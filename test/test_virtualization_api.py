# coding: utf-8

"""
    NetBox API

    API to access NetBox  # noqa: E501

    OpenAPI spec version: 2.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import aionetbox
from aionetbox.api.virtualization_api import VirtualizationApi  # noqa: E501
from aionetbox.rest import ApiException


class TestVirtualizationApi(unittest.TestCase):
    """VirtualizationApi unit test stubs"""

    def setUp(self):
        self.api = aionetbox.api.virtualization_api.VirtualizationApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_virtualization_choices_list(self):
        """Test case for virtualization_choices_list

        """
        pass

    def test_virtualization_choices_read(self):
        """Test case for virtualization_choices_read

        """
        pass

    def test_virtualization_cluster_groups_create(self):
        """Test case for virtualization_cluster_groups_create

        """
        pass

    def test_virtualization_cluster_groups_delete(self):
        """Test case for virtualization_cluster_groups_delete

        """
        pass

    def test_virtualization_cluster_groups_list(self):
        """Test case for virtualization_cluster_groups_list

        """
        pass

    def test_virtualization_cluster_groups_partial_update(self):
        """Test case for virtualization_cluster_groups_partial_update

        """
        pass

    def test_virtualization_cluster_groups_read(self):
        """Test case for virtualization_cluster_groups_read

        """
        pass

    def test_virtualization_cluster_groups_update(self):
        """Test case for virtualization_cluster_groups_update

        """
        pass

    def test_virtualization_cluster_types_create(self):
        """Test case for virtualization_cluster_types_create

        """
        pass

    def test_virtualization_cluster_types_delete(self):
        """Test case for virtualization_cluster_types_delete

        """
        pass

    def test_virtualization_cluster_types_list(self):
        """Test case for virtualization_cluster_types_list

        """
        pass

    def test_virtualization_cluster_types_partial_update(self):
        """Test case for virtualization_cluster_types_partial_update

        """
        pass

    def test_virtualization_cluster_types_read(self):
        """Test case for virtualization_cluster_types_read

        """
        pass

    def test_virtualization_cluster_types_update(self):
        """Test case for virtualization_cluster_types_update

        """
        pass

    def test_virtualization_clusters_create(self):
        """Test case for virtualization_clusters_create

        """
        pass

    def test_virtualization_clusters_delete(self):
        """Test case for virtualization_clusters_delete

        """
        pass

    def test_virtualization_clusters_list(self):
        """Test case for virtualization_clusters_list

        """
        pass

    def test_virtualization_clusters_partial_update(self):
        """Test case for virtualization_clusters_partial_update

        """
        pass

    def test_virtualization_clusters_read(self):
        """Test case for virtualization_clusters_read

        """
        pass

    def test_virtualization_clusters_update(self):
        """Test case for virtualization_clusters_update

        """
        pass

    def test_virtualization_interfaces_create(self):
        """Test case for virtualization_interfaces_create

        """
        pass

    def test_virtualization_interfaces_delete(self):
        """Test case for virtualization_interfaces_delete

        """
        pass

    def test_virtualization_interfaces_list(self):
        """Test case for virtualization_interfaces_list

        """
        pass

    def test_virtualization_interfaces_partial_update(self):
        """Test case for virtualization_interfaces_partial_update

        """
        pass

    def test_virtualization_interfaces_read(self):
        """Test case for virtualization_interfaces_read

        """
        pass

    def test_virtualization_interfaces_update(self):
        """Test case for virtualization_interfaces_update

        """
        pass

    def test_virtualization_virtual_machines_create(self):
        """Test case for virtualization_virtual_machines_create

        """
        pass

    def test_virtualization_virtual_machines_delete(self):
        """Test case for virtualization_virtual_machines_delete

        """
        pass

    def test_virtualization_virtual_machines_list(self):
        """Test case for virtualization_virtual_machines_list

        """
        pass

    def test_virtualization_virtual_machines_partial_update(self):
        """Test case for virtualization_virtual_machines_partial_update

        """
        pass

    def test_virtualization_virtual_machines_read(self):
        """Test case for virtualization_virtual_machines_read

        """
        pass

    def test_virtualization_virtual_machines_update(self):
        """Test case for virtualization_virtual_machines_update

        """
        pass


if __name__ == '__main__':
    unittest.main()
